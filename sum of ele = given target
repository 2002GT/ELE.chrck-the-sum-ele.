/ #include <bits/stdc++.h>
// #include<vector>


// using namespace std;

// vector<int> twoSum(vector<int>nums, int target) {
// vector<int> res,store;
// store = nums;

// sort(store.begin(), store.end());
// int left=0,right=nums.size()-1;
//     	int n1,n2;
    	
//     	while(left<right){
//         	if(store[left]+store[right]==target){

//             	n1 = store[left];
//             	n2 = store[right];

//             	break;
            	
            	
//         	}
//         	else if(store[left]+store[right]>target)
//             	    right--;
//         	else
//             	    left++;
//     	}

//     	for(int i=0;i<nums.size();++i){

//         	if(nums[i]==n1)
//         	 emplace work for entering element from last in deue
//             	    res.emplace_back(i);
//         	else if(nums[i]==n2)
//             	    res.emplace_back(i);
//     	}

//     	    return res;
// 	}


// int main()
// {
//     vector<int>arr={2, 4, 1,5};
//     int target;
//     cin>>target;
//     cout<<twoSum(arr ,target);
    

//     return 0;
// }


vector<int> twoSum(vector<int>& nums, int target) {

    	vector<int> res,store;
    	store = nums;

    	sort(store.begin(), store.end());

    	int left=0,right=nums.size()-1;
    	int n1,n2;

    	while(left<right){
        	if(store[left]+store[right]==target){

            	n1 = store[left];
            	n2 = store[right];

            	break;

        	}
        	else if(store[left]+store[right]>target)
            	    right--;
        	else
            	    left++;
    	}

    	for(int i=0;i<nums.size();++i){

        	if(nums[i]==n1)
            	    res.emplace_back(i);
        	else if(nums[i]==n2)
            	    res.emplace_back(i);
    	}

    	    return res;
          
	}
